{"version":3,"sources":["Components/navbar.js","Components/Form.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","htmlFor","Form","word_count","_useState","useState","_useState2","Object","slicedToArray","Text","setText","split","filter","ele","index","length","Fragment","heading","style","backgroundColor","value","onChange","e","target","rows","showAlert","newText","toUpperCase","toLowerCase","arr","i","charAt","slice","str2","join","document","getElementById","select","execCommand","arr_remove_space","Alert","alert","role","word","lower","CapitalizeWord","msg","defaultProps","about","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.48e191f1.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import { Link } from 'react-router-dom';\r\n\r\nexport function Navbar(props) {\r\n  return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n            <a className=\"navbar-brand\" href='#'>{props.title}</a>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n                </li>\r\n                {/* <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                </li> */}\r\n                </ul>\r\n                <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'light' ? 'Dark' : 'Light'}</label>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired, about: PropTypes.string.isRequired};\r\n\r\nNavbar.defaultProps = {title: \"set title here\", about: \"about text here\"};\r\n","// import { exit } from 'process';\r\nimport React, {useState} from 'react';\r\n\r\nexport function Form(props) {\r\n    const [Text, setText] = useState('');\r\n    let word_arr = Text.split(\" \");\r\n    let word_count = 0;\r\n\r\n    const filter_arr = word_arr.filter(function(ele, index) {\r\n        return ele !== \"\";\r\n    });\r\n    word_count = filter_arr.length;\r\n\r\n    function updateText(e) {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    function convertUpperCase() {\r\n        if (Text.length === 0) {\r\n            props.showAlert(\"Please enter some text\", \"warning\");\r\n        } else {\r\n            let newText = Text.toUpperCase();\r\n            setText(newText);\r\n            props.showAlert(\"convert to uppercase\", \"success\");\r\n        }\r\n    } \r\n\r\n    function convertLowerCase() {\r\n        let newText = Text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"convert to lowercase\", \"success\");\r\n    }\r\n\r\n    function clearText() {\r\n        setText('');\r\n    }\r\n\r\n    function convertCapitalize() {\r\n        let arr = Text.split(\" \");\r\n        \r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] !== '') {\r\n                arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n            }\r\n        }\r\n        let str2 = arr.join(\" \");\r\n        setText(str2);\r\n        props.showAlert(\"convert to capitalize\", \"success\");\r\n    }\r\n\r\n    function copyClipboard() {\r\n        document.getElementById('exampleFormControlTextarea1').select();\r\n        document.execCommand('copy');\r\n        props.showAlert(\"copy clip board\", \"success\");\r\n    }\r\n\r\n    function extraSpaceRemove() {   \r\n        let newText = Text.split(/[ ]+/);\r\n        const arr_remove_space = newText.filter(function(ele, index){\r\n            return ele !== '';\r\n        });\r\n        setText(arr_remove_space.join(\" \"));\r\n        props.showAlert(\"remove extra space\", \"success\");\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className={`my-4 container text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n        <h1>{props.heading}</h1>\r\n        <textarea className={`form-control my-4 text-${props.mode === 'light' ? 'dark' : 'light'}`} style = {{backgroundColor: props.mode === 'dark' ? '#020918' : 'white'}} value={Text} onChange={updateText} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n        <button className='btn btn-primary mx-1' onClick={convertUpperCase}>Convert UpperCase</button>\r\n        <button className='btn btn-primary mx-1' onClick={convertLowerCase}>Convert LowerCase</button>\r\n        <button className='btn btn-primary mx-1' onClick={convertCapitalize}>Convert Capitalize</button>\r\n        <button className='btn btn-primary mx-1' onClick={copyClipboard}>Copy Clipboard</button>\r\n        <button className='btn btn-primary mx-1' onClick={extraSpaceRemove}>Extra Space Remove</button>\r\n        <button className='btn btn-primary mx-1' onClick={clearText}>Clear Text</button>\r\n        </div>\r\n        <div className={`container text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <h1>Text Summary</h1>\r\n            <p>{word_count} word and {Text.length} characters</p>\r\n            <p>{0.032 * word_count} minutes read</p>\r\n            <h2>Text Preview</h2>\r\n            <p>{Text.length > 0 ? Text : \"Enter some text in textarea\"}</p>\r\n        </div>\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\n// import {Form} from './Components/Form';\r\n\r\nexport default function Alert(props) {\r\n  const CapitalizeWord = (word) =>{\r\n    const lower = word.toLowerCase(); // hello  ->  hello\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);  // hello  ->  Hello\r\n  }\r\n    \r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{CapitalizeWord(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\n// import About from './Components/About';\nimport {Navbar} from './Components/navbar';\nimport {Form} from './Components/Form';\nimport { useState } from 'react';\nimport Alert from './Components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg : message,\n      type : type\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#020918';\n      showAlert(\"dark mode enable\", \"success\");\n      // setInterval(() => {\n      //   document.title = \"VIRUS !!!!!!!\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"WARNING !!!!!!!!!\";\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"light mode enable\", \"success\");\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n        <Navbar title=\"TextUtils\" mode = {mode} toggleMode = {toggleMode}  about=\"About TextUtils\"></Navbar>\n        <Alert alert = {alert} />\n          {/* <Routes> */}\n            {/* <Route exact path=\"/about\" element = {<About/>}/> */}\n            {/* <Route exact path=\"/\" element = {<Form showAlert = {showAlert} heading=\"Enter Text Here\" mode = {mode}/>}/> */}\n            <Form showAlert = {showAlert} heading=\"Enter Text Here\" mode = {mode} /> \n          {/* </Routes> */}\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n<>\n  <App></App>\n</>\n,\ndocument.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["Components/About.js","Components/navbar.js","Components/Form.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","react_default","a","createElement","className","concat","mode","id","style","backgroundColor","type","data-bs-toggle","data-bs-target","aria-expanded","aria-controls","border","aria-labelledby","data-bs-parent","Navbar","react_router_dom","to","title","aria-label","aria-current","about","onClick","toggleMode","htmlFor","Form","word_count","_useState","useState","_useState2","Object","slicedToArray","Text","setText","split","filter","ele","index","length","Fragment","heading","value","onChange","e","target","rows","disabled","showAlert","newText","toUpperCase","toLowerCase","arr","i","charAt","slice","str2","join","document","getElementById","select","execCommand","arr_remove_space","Alert","alert","role","word","lower","CapitalizeWord","msg","defaultProps","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","body","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.b466ff44.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About(props) {\r\n\r\n  return (\r\n    <div className={`container my-4 py-3 text-${props.mode === 'light' ? 'dark' : 'light'}`} >\r\n        <h1>About</h1>\r\n        <div className=\"accordion my-3\" id=\"accordionExample\"  >\r\n            <div className=\"accordion-item\" style = {{backgroundColor: props.mode === 'dark' ? '#020918' : 'white'}} >\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\" >\r\n                <button className={`accordion-button collapsed text-${props.mode === 'light' ? 'dark' : 'light'}`}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"false\" aria-controls=\"collapseOne\" style = {{backgroundColor: props.mode === 'dark' ? '#020918' : 'white',  border: '1px solid white'}} >\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\"  style = {{border: '1px solid white'}}>\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style = {{backgroundColor: props.mode === 'dark' ? '#020918' : 'white'}} >\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className={`accordion-button collapsed text-${props.mode === 'light' ? 'dark' : 'light'}`}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\" style = {{backgroundColor: props.mode === 'dark' ? '#020918' : 'white',  border: '1px solid white'}} >\r\n                    Accordion Item #2\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\"  style = {{border: '1px solid white'}}>\r\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\" style = {{backgroundColor: props.mode === 'dark' ? '#020918' : 'white'}}>\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className={`accordion-button collapsed text-${props.mode === 'light' ? 'dark' : 'light'}`} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\" style = {{backgroundColor: props.mode === 'dark' ? '#020918' : 'white', border: '1px solid white'}} >\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                    <div className=\"accordion-body\"  style = {{border: '1px solid white'}}>\r\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport function Navbar(props) {\r\n  return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n            <Link className=\"navbar-brand\" to='/FirstReactApp'>{props.title}</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/FirstReactApp\">Home</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/about\">{props.about}</Link>\r\n                </li>\r\n                </ul>\r\n                <div className=\"form-check form-switch\">\r\n                    <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n                    <label className={`form-check-label text-${props.mode === 'light' ? 'dark' : 'light'}`} htmlFor=\"flexSwitchCheckDefault\">{props.mode === 'light' ? 'Enable' : 'Disable'} Dark Mode</label>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {title: PropTypes.string.isRequired, about: PropTypes.string.isRequired};\r\n\r\nNavbar.defaultProps = {title: \"set title here\", about: \"about text here\"};\r\n","\r\nimport React, {useState} from 'react';\r\n\r\nexport function Form(props) {\r\n    const [Text, setText] = useState('');\r\n    let word_arr = Text.split(\" \");\r\n    let word_count = 0;\r\n\r\n    const filter_arr = word_arr.filter(function(ele, index) {\r\n        return ele !== \"\";\r\n    });\r\n    word_count = filter_arr.length;\r\n\r\n    function updateText(e) {\r\n        setText(e.target.value);\r\n    }\r\n\r\n    function convertUpperCase() {\r\n        if (Text.length === 0) {\r\n            props.showAlert(\"Please Enter Some Text\", \"warning\");\r\n        } else {\r\n            let newText = Text.toUpperCase();\r\n            setText(newText);\r\n            props.showAlert(\"Convert to Uppercase\", \"success\");\r\n        }\r\n    } \r\n\r\n    function convertLowerCase() {\r\n        let newText = Text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Convert to Lowercase\", \"success\");\r\n    }\r\n\r\n    function clearText() {\r\n        setText('');\r\n        props.showAlert(\"Clear All Text\", \"success\");\r\n    }\r\n\r\n    function convertCapitalize() {\r\n        let arr = Text.split(\" \");\r\n        \r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] !== '') {\r\n                arr[i] = arr[i].charAt(0).toUpperCase() + arr[i].slice(1);\r\n            }\r\n        }\r\n        let str2 = arr.join(\" \");\r\n        setText(str2);\r\n        props.showAlert(\"Convert to Capitalize\", \"success\");\r\n    }\r\n\r\n    function copyClipboard() {\r\n        document.getElementById('exampleFormControlTextarea1').select();\r\n        document.execCommand('copy');\r\n        props.showAlert(\"Copy Clipboard\", \"success\");\r\n    }\r\n\r\n    function extraSpaceRemove() {   \r\n        let newText = Text.split(/[ ]+/);\r\n        const arr_remove_space = newText.filter(function(ele, index){\r\n            return ele !== '';\r\n        });\r\n        setText(arr_remove_space.join(\" \"));\r\n        props.showAlert(\"Remove Extra Space\", \"success\");\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <div className={`my-4 container text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n        <h1>{props.heading}</h1>\r\n        <textarea className={`form-control my-4 text-${props.mode === 'light' ? 'dark' : 'light'}`} style = {{backgroundColor: props.mode === 'dark' ? '#020918' : 'white'}} value={Text} onChange={updateText} id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n        <button disabled={word_count===0} className='btn btn-primary mx-1 my-2' onClick={convertUpperCase}>Convert UpperCase</button>\r\n        <button disabled={word_count===0} className='btn btn-primary mx-1 my-2' onClick={convertLowerCase}>Convert LowerCase</button>\r\n        <button disabled={word_count===0} className='btn btn-primary mx-1 my-2' onClick={convertCapitalize}>Convert Capitalize</button>\r\n        <button disabled={word_count===0} className='btn btn-primary mx-1 my-2' onClick={copyClipboard}>Copy Clipboard</button>\r\n        <button disabled={word_count===0} className='btn btn-primary mx-1 my-2' onClick={extraSpaceRemove}>Extra Space Remove</button>\r\n        <button disabled={word_count===0} className='btn btn-primary mx-1 my-2' onClick={clearText}>Clear Text</button>\r\n        </div>\r\n        <div className={`container text-${props.mode === 'light' ? 'dark' : 'light'}`}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{word_count} word and {Text.length} characters</p>\r\n            <p>{0.032 * word_count} minutes read</p>\r\n            <h2>Preview</h2>\r\n            <p>{Text.length > 0 ? Text : \"Nothing to Preview\"}</p>\r\n        </div>\r\n    </>\r\n\r\n  )\r\n}\r\n","import React from 'react';\r\n// import {Form} from './Components/Form';\r\n\r\nexport default function Alert(props) {\r\n  const CapitalizeWord = (word) =>{\r\n    const lower = word.toLowerCase(); // hello  ->  hello\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);  // hello  ->  Hello\r\n  }\r\n    \r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{CapitalizeWord(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport About from './Components/About';\nimport {Navbar} from './Components/navbar';\nimport {Form} from './Components/Form';\nimport { useState } from 'react';\nimport Alert from './Components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg : message,\n      type : type\n    });\n    setTimeout(() => {\n      setAlert(null)\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = '#020918';\n      showAlert(\"Dark Mode Enable\", \"success\");\n      // setInterval(() => {\n      //   document.title = \"VIRUS !!!!!!!\";\n      // }, 2000);\n      // setInterval(() => {\n      //   document.title = \"WARNING !!!!!!!!!\";\n      // }, 1500);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Dark Mode Disable\", \"success\");\n    }\n  }\n  return (\n    <>\n      <Router>\n        <Navbar title=\"TextUtils\" mode = {mode} toggleMode = {toggleMode}  about=\"About TextUtils\"></Navbar>\n        <Alert alert = {alert} />\n          <Routes>\n            <Route exact path=\"/about\" element = {<About mode = {mode}/>}/>\n            <Route exact path=\"/FirstReactApp\" element = {<Form showAlert = {showAlert} heading=\"Try TextUtils - Word , Character Counter\" mode = {mode}/>}/>\n            {/* <Form showAlert = {showAlert} heading=\"Enter Text Here\" mode = {mode} />  */}\n          </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n<>\n  <App></App>\n</>\n,\ndocument.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}